# Generated by Django 4.0 on 2023-09-03 03:36

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0005_auto_20220424_2025'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='描述')),
                ('args', models.JSONField(blank=True, default=dict, null=True, verbose_name='初始化参数格式')),
            ],
            options={
                'verbose_name': '操作库"',
                'verbose_name_plural': '操作库"',
            },
        ),
        migrations.CreateModel(
            name='Method',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='描述')),
                ('args', models.JSONField(blank=True, default=dict, null=True, verbose_name='参数格式')),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='methods', to='app.library', verbose_name='所属操作库')),
            ],
            options={
                'verbose_name': '操作方法"',
                'verbose_name_plural': '操作方法"',
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='描述')),
            ],
            options={
                'verbose_name': '用例模块"',
                'verbose_name_plural': '用例模块"',
            },
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='描述')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveSmallIntegerField(choices=[(0, 'P0'), (1, 'P1'), (2, 'P2')], default=1)),
                ('last_status', models.PositiveSmallIntegerField(choices=[(0, '待运行'), (1, '通过'), (2, '失败'), (3, '异常')], default=0, null=True)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to='auth.user')),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.module')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='标签')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to='auth.user')),
            ],
            options={
                'verbose_name': '测试用例',
                'verbose_name_plural': '测试用例',
            },
        ),
        migrations.CreateModel(
            name='TestPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='描述')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('last_status', models.PositiveSmallIntegerField(choices=[(0, '待运行'), (1, '全部通过'), (2, '部分失败')], default=0, null=True)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to='auth.user')),
                ('testcases', models.ManyToManyField(blank=True, to='app.TestCase')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to='auth.user')),
            ],
            options={
                'verbose_name': '测试计划',
                'verbose_name_plural': '测试计划',
            },
        ),
        migrations.CreateModel(
            name='TestReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(null=True)),
                ('end_time', models.DateTimeField(null=True)),
                ('status', models.PositiveSmallIntegerField(choices=[(0, '待运行'), (1, '全部通过'), (2, '部分失败')], default=0, null=True)),
                ('total', models.PositiveIntegerField(default=0, null=True)),
                ('fail_num', models.PositiveIntegerField(default=0, null=True)),
                ('pass_num', models.PositiveIntegerField(default=0, null=True)),
                ('testplan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.testplan')),
            ],
            options={
                'verbose_name': '测试报告"',
                'verbose_name_plural': '测试报告"',
            },
        ),
        migrations.CreateModel(
            name='TestRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(null=True)),
                ('end_time', models.DateTimeField(null=True)),
                ('status', models.PositiveSmallIntegerField(choices=[(0, '待运行'), (1, '通过'), (2, '失败'), (3, '异常')], default=0, null=True)),
                ('log', models.TextField(null=True)),
                ('testcase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.testcase')),
                ('testreport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.testreport')),
            ],
            options={
                'verbose_name': '测试纪录"',
                'verbose_name_plural': '测试报告"',
            },
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveSmallIntegerField(choices=[(0, '测试步骤'), (1, '测试准备'), (2, '测试清理')], default=0, verbose_name='步骤类型')),
                ('args', models.JSONField(blank=True, default=dict, null=True, verbose_name='方法参数')),
                ('name', models.CharField(blank=True, max_length=128, null=True, verbose_name='名称')),
                ('method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='steps', to='app.method', verbose_name='操作方法')),
                ('testcase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_steps', to='app.testcase', verbose_name='所属用例')),
            ],
            options={
                'verbose_name': '步骤',
                'verbose_name_plural': '步骤',
            },
        ),
    ]
